{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/changelog/changelog.component.html","./src/app/changelog/changelog.component.ts","./src/app/resume/resume.component.html","./src/app/app-routing.module.ts","./src/app/resume/resume.component.ts","./src/app/app.module.ts","./src/environments/environment.prod.ts","./src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","navigation","label","link","menuState","this","toggleMenu","transform","ChangelogComponent","httpClient","releases","commitTypes","sortingTypes","feat","fix","perf","test","style","revert","build","refactor","chore","docs","ci","get","subscribe","changelog","currentRelease","currentChanges","forEach","entry","tag","decoration","replace","split","filter","startsWith","pop","undefined","changes","version","push","type","subject","commiter","date","message","scope","trim","release","sort","a","b","routes","component","ResumeComponent","isWorkFiltered","filteredWork","now","Date","setFullYear","getFullYear","month","getMonth","padStart","day","getDate","dateFilter","resume","filterWork","work","value","endDate","path","pathMatch","redirectTo","AppRoutingModule","useHash","AppModule","enabled","registrationStrategy","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main.59ef1fe73670a61b7f69.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","<!-- Menu -->\n<button class=\" focus:outline-none z-20 absolute top-3 left-3 border rounded-lg shadow-md bg-white print:hidden\"\n  aria-label=\"toogle navigation menu\"\n  (click)=\"toggleMenu()\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"h-6 w-6 text-indigo-300\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\">\n    <path stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"M4 6h16M4 12h16M4 18h16\" />\n  </svg>\n</button>\n<!-- Menu -->\n<nav [@openClose]=\"menuState\"\n  class=\"z-10 absolute top-12 bg-white w-44 rounded-r-lg shadow-md text-sm text-indigo-600 font-bold capitalize print:hidden\"\n  role=\"navigation\">\n  <div class=\"flex flex-col justify-center\">\n    <a *ngFor=\"let page of navigation\"\n      class=\"h-12 py-3 px-3 border\"\n      [routerLink]=\"page.link\">\n      <!-- Resume -->\n      <svg *ngIf=\"page.label === 'resume'\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"inline h-6 w-6 stroke-current text-black\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\">\n        <path stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n      </svg>\n      <!-- Changelog -->\n      <svg xmlns=\"http://www.w3.org/2000/svg\"\n        *ngIf=\"page.label === 'changelog'\"\n        class=\"inline h-6 w-6 stroke-current text-black\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n      </svg>\n      <span class=\"ml-2 inline align-middle\">{{page.label}}</span>\n    </a>\n  </div>\n</nav>\n<!-- Routing -->\n<div class=\"min-h-screen flex justify-center\">\n\n  <router-outlet></router-outlet>\n\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\n\nimport { Component } from '@angular/core';\n\n@Component({\n  animations: [\n    trigger('openClose', [\n      state('open', style({\n\n      })),\n      state('closed', style({\n        transform: 'translateX(-100%)'\n      })),\n      transition('open => closed', [\n        animate('200ms')\n      ]),\n      transition('closed => open', [\n        animate('200ms')\n      ])\n    ])\n  ],\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  /**\n   * The navigation items.\n   */\n  public readonly navigation = [\n    {\n      label: 'resume',\n      link: '/resume'\n    },\n    {\n      label: 'changelog',\n      link: '/changelog'\n    }\n  ];\n\n  /**\n   * Valid menu states.\n   */\n  public menuState: 'open'|'closed' = 'closed';\n\n  /**\n   * Toggle the menu\n   */\n  public toggleMenu(): void {\n    // Close menu.\n    if (this.menuState === 'open') {\n      this.menuState = 'closed';\n      return;\n    }\n\n    // Open menu.\n    this.menuState = 'open';\n  }\n\n}\n","<div class=\"flex justify-center\">\n  <div class=\"flex flex-col justify-between max-w-4xl min-w-full p-2 space-y-2\">\n    <header class=\"print:hidden\">\n      <!-- Page title -->\n      <h1 class=\"ml-10 lg:ml-0 border-b-2 border-gray-300 font-bold text-2xl text-indigo-900 flex justify-between\">\n        Changelog\n      </h1>\n    </header>\n    <!-- Main content. -->\n    <main class=\"flex flex-col\">\n      <div *ngFor=\"let release of releases\"\n        class=\"rounded-lg bg-white shadow px-2 pt-2 mb-2\">\n        <!-- Title -->\n        <h2 class=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900 flex justify-between\">\n          Release {{release.version}}\n        </h2>\n        <!-- Entries -->\n        <div class=\"mt-2 flex flex-row flex-wrap -mr-2\">\n          <div *ngFor=\"let commit of release.changes\"\n            class=\"shadow p-2 rounded-lg bg-gray-50 sm:w-72 print:w-72 mr-2 mb-2 flex-grow\">\n            <h3 class=\"text-lg text-gray-700 border-b-2\">\n              {{commitTypes[commit.type].emoji}}\n              <span class=\"ml-2\">{{commitTypes[commit.type].title}}</span>\n            </h3>\n            <ul class=\"list-disc list-inside\">\n              <!-- Commit type -->\n              <li *ngFor=\"let change of commit.changes\"\n                class=\"\">{{change.message.subject }}</li>\n            </ul>\n          </div>\n        </div>\n\n      </div>\n    </main>\n  </div>\n</div>","import { Changelog } from './changelog';\nimport { ChangelogDetail } from './changelog-detail';\nimport { CommitType } from './commit-type';\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Release } from './release';\nimport commitTypes from './commit-types.json';\n\n@Component({\n  selector: 'app-changelog',\n  templateUrl: './changelog.component.html',\n  styleUrls: ['./changelog.component.scss']\n})\nexport class ChangelogComponent {\n  /**\n   * Release entries.\n   */\n  public releases: Release[] = [];\n\n  /**\n   * Commit type.\n   */\n  public commitTypes: {[commitType: string]: CommitType} = commitTypes;\n\n  /**\n   * Sorting commit types.\n   */\n  private sortingTypes: {[type: string]: number} = {\n    feat: 1,\n    fix: 2,\n    perf: 3,\n    test: 4,\n    style: 5,\n    revert: 6,\n    build: 7,\n    refactor: 8,\n    chore: 9,\n    docs: 10,\n    ci: 11,\n  };\n\n  /**\n   * Initialize the component.\n   */\n  public constructor(httpClient: HttpClient) {\n    // Get the resume.\n    httpClient.get<Changelog[]>('/assets/changelog.json')\n      .subscribe(\n        (changelog: Changelog[]) => {\n          // Current release.\n          let currentRelease: Release;\n          let currentChanges: {[type: string]: ChangelogDetail[]};\n\n          // Loop throught the changelog and populate the release.\n          changelog.forEach((entry: Changelog): void => {\n            // Extract tag from current entry.\n            const tag = entry\n              .decoration\n              .replace(/[ \\(\\)]/g, '')\n              .split(',')\n              .filter((entry:string) => entry.startsWith('tag:') === true)\n              .pop();\n\n            if (tag !== undefined || currentRelease === undefined) {\n              // Current changes grouped by type.\n              currentChanges = {};\n\n              if (tag !== undefined) {\n                // Initialize a release.\n                currentRelease = {\n                  changes: [],\n                  version: tag.replace('tag:', '')\n                };\n              } else {\n                // Initialize a release.\n                currentRelease = {\n                  changes: [],\n                  version: ''\n                };\n              }\n\n              // Add to the releases.\n              this.releases.push(currentRelease);\n            }\n\n            // Parse the commit message.\n            const [type, subject] = entry.subject.split(':', 2);\n\n            // Check if type already exists.\n            if (currentChanges[type] === undefined) {\n              currentChanges[type] = [];\n\n              // Append to the release.\n              currentRelease.changes.push({\n                type,\n                changes: currentChanges[type]\n              });\n            }\n\n            // Append\n            currentChanges[type].push({\n              commiter: entry.commiter,\n              date: entry.date,\n              message: {\n                scope: '',\n                subject: subject.trim(),\n                type\n              }\n            })\n          });\n\n          // Sort the change types.\n          this.releases\n            .forEach((release) => {\n              release.changes\n                .sort((a, b) => this.sortingTypes[a.type] - this.sortingTypes[b.type])\n            })\n        }\n      );\n  }\n}\n","<div class=\"flex flex-col justify-between p-2 space-y-2 min-h-screen max-w-4xl\">\n  <header class=\"print:hidden\">\n    <!-- Page title -->\n    <h1 class=\"ml-10 lg:ml-0 border-b-2 border-gray-300 font-bold text-2xl text-indigo-900 flex justify-between\">\n      Resume\n    </h1>\n  </header>\n  <!-- Header -->\n  <header *ngIf=\"resume && resume.basics\"\n    class=\"p-2 rounded-lg bg-white shadow print:shadow-none flex sm:flex-row flex-col sm:space-x-4 print:flex-row print:space-x-4\">\n    <!-- Photo, location and contacts -->\n    <div class=\"whitespace-nowrap sm:border-r sm:pr-2 text-center sm:profile-card\">\n      <img class=\"rounded-full shadow-md border-indigo-200 print:hidden m-auto mt-2 border\"\n        width=\"200\"\n        height=\"200\"\n        alt=\"portrait\"\n        src=\"assets/Profilepicture_1.png\">\n      <div class=\"sm:pb-0 pb-4 print:pb-0\">\n        <!-- Name -->\n        <h1 class=\"font-semibold text-2xl text-indigo-900 \">{{resume.basics.name}}</h1>\n        <!-- Label -->\n        <p>{{resume.basics.label}}</p>\n        <!-- Location -->\n        <p class=\"text-gray-500 text-sm mb-2\">{{resume.basics.location?.city}},\n          {{resume.basics.location?.region}},\n          {{resume.basics.location?.countryCode }}\n        </p>\n        <!-- Phone contact -->\n        <p class=\"flex pb-1 text-indigo-600\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <path\n              d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm4.5 17.311l-1.76-3.397-1.032.505c-1.12.543-3.4-3.91-2.305-4.497l1.042-.513-1.747-3.409-1.053.52c-3.601 1.877 2.117 12.991 5.8 11.308l1.055-.517z\" />\n          </svg>\n          <a class=\"pl-2\"\n            rel=\"noopener noreferrer\"\n            href=\"tel:{{resume.basics.phone}}\">\n            {{resume.basics.phone}}\n          </a>\n        </p>\n        <!-- Email contact -->\n        <p class=\"flex pb-1 text-indigo-600\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <path\n              d=\"M12 2.02c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 12.55l-5.992-4.57h11.983l-5.991 4.57zm0 1.288l-6-4.629v6.771h12v-6.771l-6 4.629z\" />\n          </svg>\n          <a class=\"pl-2\"\n            rel=\"noopener noreferrer\"\n            href=\"mailto:{{resume.basics.email}}\">\n            {{resume.basics.email}}\n          </a>\n        </p>\n        <!-- Website -->\n        <p class=\"flex text-indigo-600\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"inline h-6 w-6 stroke-current text-black\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\">\n            <path stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n          <a class=\"pl-2\"\n            rel=\"noopener noreferrer\"\n            href=\"{{resume.basics.website}}\">\n            {{resume.basics.website}}\n          </a>\n        </p>\n      </div>\n    </div>\n    <!-- Summary and links -->\n    <div class=\"flex flex-col w-full  justify-between\">\n      <!-- Summary -->\n      <p class=\"pb-2 text-md print:text-sm \">{{resume.basics.summary}}</p>\n      <!-- Links -->\n      <div class=\"flex flex-row space-x-6 text-indigo-600\">\n        <!-- Links -->\n        <a *ngFor=\"let profile of resume.basics.profiles\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href=\"{{profile.url}}\">\n          <!-- Twitter -->\n          <svg *ngIf=\"profile.network == 'Twitter'\"\n            class=\"mr-1 inline \"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <path\n              d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6.5 8.778c-.441.196-.916.328-1.414.388.509-.305.898-.787 1.083-1.362-.476.282-1.003.487-1.564.597-.448-.479-1.089-.778-1.796-.778-1.59 0-2.758 1.483-2.399 3.023-2.045-.103-3.86-1.083-5.074-2.572-.645 1.106-.334 2.554.762 3.287-.403-.013-.782-.124-1.114-.308-.027 1.14.791 2.207 1.975 2.445-.346.094-.726.116-1.112.042.313.978 1.224 1.689 2.3 1.709-1.037.812-2.34 1.175-3.647 1.021 1.09.699 2.383 1.106 3.773 1.106 4.572 0 7.154-3.861 6.998-7.324.482-.346.899-.78 1.229-1.274z\" />\n          </svg>\n          <!-- LinkedIn -->\n          <svg *ngIf=\"profile.network == 'LinkedIn'\"\n            class=\"mr-1 inline\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <path\n              d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 8c0 .557-.447 1.008-1 1.008s-1-.45-1-1.008c0-.557.447-1.008 1-1.008s1 .452 1 1.008zm0 2h-2v6h2v-6zm3 0h-2v6h2v-2.861c0-1.722 2.002-1.881 2.002 0v2.861h1.998v-3.359c0-3.284-3.128-3.164-4-1.548v-1.093z\" />\n          </svg>\n          <!-- Usermane -->\n          {{profile.username}}\n        </a>\n        <!-- Version -->\n        <div *ngIf=\"release\"\n          class=\"flex flex-grow items-end justify-end place-items-end text-gray-500 text-xs\">\n          <span class=\"text-right -mb-1\">v{{release.version}}</span>\n        </div>\n      </div>\n    </div>\n  </header>\n  <!-- Main -->\n  <main class=\"flex-grow place-self-stretch\">\n    <!-- Professional Experience -->\n    <div *ngIf=\"resume && resume.work\"\n      class=\"rounded-lg bg-white shadow p-2 mb-2 print:shadow-none\">\n      <h2 class=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900 flex justify-between\">\n        <!-- Section title -->\n        <span>Experience</span>\n        <label class=\"flex items-center text-sm print:hidden\">\n          <input type=\"checkbox\"\n            [ngModel]=\"isWorkFiltered\"\n            (click)=\"filterWork()\"\n            class=\"form-checkbox h-4 w-4 text-indigo-500\">\n          <span class=\"ml-2\">Within last 7 years</span>\n        </label>\n      </h2>\n      <div class=\"mt-2 border-b\"\n        [ngClass]=\"{'border-b': isLast === false}\"\n        *ngFor=\"let work of filteredWork; last as isLast\">\n        <!-- ADP -->\n        <img *ngIf=\"work.company === 'ADP'\"\n          width=\"24\"\n          height=\"24\"\n          alt=\"ADP Logo\"\n          class=\"float-left rounded-full w-6 shadow mr-3\"\n          src=\"assets/logo-adp.jpeg\">\n        <!-- Tanisha Systems -->\n        <img *ngIf=\"work.company === 'Tanisha Systems Inc.'\"\n          width=\"24\"\n          height=\"24\"\n          alt=\"Tanisha Systems logo\"\n          class=\"float-left rounded-full w-6 shadow mr-3\"\n          src=\"assets/logo-tanisha.jpeg\">\n          <!-- Spruce Tech -->\n          <img *ngIf=\"work.company === 'Spruce Technology Inc.'\"\n            width=\"24\"\n            height=\"24\"\n            alt=\"Spruce Technology Logo\"\n            class=\"float-left rounded-full w-6 shadow mr-3\"\n            src=\"assets/logo-spruce.png\">\n          <!-- CDK Global -->\n          <img *ngIf=\"work.company === 'CDK Global - formerly ADP Dealer Services'\"\n            width=\"24\"\n            height=\"24\"\n            alt=\"The CDK Global logo\"\n            class=\"float-left rounded-full w-6 shadow mr-3\"\n            src=\"assets/logo-cdk.png\">\n          <!-- Approva -->\n            <img *ngIf=\"work.company === 'InfoR - formerly Approva Systems Pvt Ltd.'\"\n              width=\"24\"\n              height=\"24\"\n              alt=\"Approva logo\"\n              class=\"float-left rounded-full w-6 shadow mr-3\"\n              src=\"assets/logo-approva.jpg\">\n        <!-- Company, position and period -->\n        <div class=\"flex justify-between space-x-2\">\n          <h3 class=\"font-bold text-lg w-full\">\n            {{work.company}} - {{work.position}}\n          </h3>\n          <div class=\"text-sm w-20 pl-1 sm:w-36 sm:text-right print:w-36\">\n            {{work.startDate | date: 'MMM yy'}}\n            <span class=\"hidden sm:inline\">-</span>\n            <span *ngIf=\"work.endDate === 'Current'\">\n              Current\n            </span>\n            <span *ngIf=\"work.endDate !== 'Current'\">\n              {{work.endDate | date: 'MMM yy'}}\n            </span>\n          </div>\n        </div>\n        <!-- Summary -->\n        <h4 class=\"bg-gray-100 rounded-lg italic p-1 mb-1 print:px-0\">{{work.summary}}</h4>\n        <!-- Highlights -->\n        <p *ngFor=\"let highlight of work.highlights\"\n          class=\"mb-2 text-sm print:text-xs\">\n          {{highlight}}\n        </p>\n      </div>\n    </div>\n    <!-- Publications -->\n    <div *ngIf=\"resume && resume.publications\"\n      class=\"rounded-lg bg-white shadow p-2 mb-2 print:shadow-none\">\n      <h2 class=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900\">\n        <span>Conferences</span>\n      </h2>\n      <div class=\"mt-2\"\n        *ngFor=\"let publication of resume.publications\">\n        <!-- ADP -->\n        <img *ngIf=\"publication.publisher === 'ADP Global Product & Development Connect Conference'\"\n          width=\"24\"\n          height=\"24\"\n          alt=\"ADP Logo\"\n          class=\"float-left rounded-full w-6 shadow mr-3\"\n          src=\"assets/logo-adp.jpeg\">\n        <!-- Conference name -->\n        <div class=\"flex justify-between space-x-2\">\n          <h3 class=\"font-bold text-lg w-full\">\n            {{publication.publisher}}\n          </h3>\n        </div>\n        <!-- Title -->\n        <h4 class=\"bg-gray-100 rounded-lg italic p-1 mb-1 print:px-0 flex justify-between\">\n          <span>{{publication.name}}</span>\n          <span class=\"not-italic text-sm\">{{ publication.releaseDate | date: 'MMM yyyy'}}</span>\n        </h4>\n        <!-- Summary -->\n        <p class=\"mb-2 text-sm print:text-xs\">\n          {{publication.summary}}\n        </p>\n      </div>\n    </div>\n    <!-- Education -->\n    <div *ngIf=\"resume && (resume.education || resume.languages)\"\n      class=\"rounded-lg bg-white shadow p-2 mb-2 print:shadow-none\">\n      <div *ngIf=\"resume.education\">\n        <h2 class=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900\">\n          Education\n        </h2>\n        <div class=\"mt-2\"\n          *ngFor=\"let education of resume.education\">\n          <!-- PUCRS -->\n          <img *ngIf=\"education.institution === 'Pontifícia Universidade Católica (PUCRS)'\"\n            width=\"24\"\n            height=\"24\"\n            alt=\"ADP Logo\"\n            class=\"float-left rounded-full w-6 shadow mr-3\"\n            src=\"assets/logo-pucrs.png\">\n          <div class=\"flex justify-between space-x-2\">\n            <h3 class=\"font-bold text-lg w-full\">\n              {{education.institution}}\n            </h3>\n            <div class=\"text-sm w-20 pl-1 sm:w-36 sm:text-right print:w-36\">\n              {{education.startDate | date: 'MMM yy'}}\n              <span class=\"hidden sm:inline\">-</span>\n              {{education.endDate | date: 'MMM yy'}}\n            </div>\n          </div>\n          <h4 class=\"p-1 mb-1\">{{education.studyType}} {{education.area}}</h4>\n        </div>\n      </div>\n      <!-- Languages -->\n      <div *ngIf=\"resume.education\">\n        <h2 class=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900\">\n          Languages\n        </h2>\n        <div class=\"mt-2 flex flex-row flex-wrap\">\n          <div *ngFor=\"let language of resume.languages\">\n            <p class=\"mr-4\">\n              <!-- Brazilian Portuguese -->\n              <span *ngIf=\"language.language === 'Portugues'\">🇧🇷</span>\n              <!-- USA English -->\n              <span *ngIf=\"language.language === 'English'\">🇺🇸</span>\n              <!-- The language -->\n              <span class=\"pl-2 font-bold\">{{language.language}}</span>:\n              <span>{{language.fluency}}</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Technical skills -->\n    <div *ngIf=\"resume && resume.skills\"\n      class=\"rounded-lg bg-white shadow p-2 print:shadow-none\">\n      <h2 class=\"border-b-2 border-gray-300 font-bold text-xl text-indigo-900\">\n        Technical Skills\n      </h2>\n      <dl>\n        <ng-container *ngFor=\"let skill of resume.skills\">\n          <dt class=\"font-bold text-lg mb-1 mt-2\">{{ skill.name }}</dt>\n          <dd class=\"text-sm\">\n            {{ skill.keywords?.join(', ') }}\n          </dd>\n        </ng-container>\n      </dl>\n    </div>\n  </main>\n  <!-- Footer -->\n  <footer class=\"rounded-lg bg-white shadow p-2 flex space-x-6 text-sm text-indigo-600 font-bold print:hidden\">\n    <!-- Github link -->\n    <a href=\"https://github.com/priyesh08/priyesh-bhishnurkar-profile\"\n      class=\"whitespace-nowrap\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"inline mr-1\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\">\n        <path\n          d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 6c-3.313 0-6 2.686-6 6 0 2.651 1.719 4.9 4.104 5.693.3.056.396-.13.396-.289v-1.117c-1.669.363-2.017-.707-2.017-.707-.272-.693-.666-.878-.666-.878-.544-.373.041-.365.041-.365.603.042.92.619.92.619.535.917 1.403.652 1.746.499.054-.388.209-.652.381-.802-1.333-.152-2.733-.667-2.733-2.965 0-.655.234-1.19.618-1.61-.062-.153-.268-.764.058-1.59 0 0 .504-.161 1.65.615.479-.133.992-.199 1.502-.202.51.002 1.023.069 1.503.202 1.146-.776 1.648-.615 1.648-.615.327.826.121 1.437.06 1.588.385.42.617.955.617 1.61 0 2.305-1.404 2.812-2.74 2.96.216.186.412.551.412 1.111v1.646c0 .16.096.347.4.288 2.383-.793 4.1-3.041 4.1-5.691 0-3.314-2.687-6-6-6z\" />\n      </svg>\n      <p class=\"inline align-middle\">Git Repo</p>\n    </a>\n    <!-- Changelog -->\n    <a class=\"whitespace-nowrap\"\n      routerLink=\"/changelog\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"inline h-6 w-6 stroke-current text-black mr-1\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n      </svg>\n      <p class=\"inline align-middle\">Changelog</p>\n    </a>\n    <!-- Build status badge -->\n    <div class=\"flex flex-col justify-center\">\n      <img src=\"https://github.com/priyesh08/priyesh-bhishnurkar-profile/actions/workflows/node.js.yml/badge.svg\"\n        alt=\"GitHub actions build status badge\">\n    </div>\n  </footer>\n</div>","import { RouterModule, Routes } from '@angular/router';\n\nimport { ChangelogComponent } from './changelog/changelog.component';\nimport { NgModule } from '@angular/core';\nimport { ResumeComponent } from './resume/resume.component';\n\nconst routes: Routes = [\n  // Resume.\n  {\n    component: ResumeComponent,\n    path: 'resume',\n    pathMatch: 'full'\n  },\n  // Changelog.\n  {\n    component: ChangelogComponent,\n    path: 'changelog',\n    pathMatch: 'full'\n  },\n  // Default route for application.\n  {\n    path: '',\n    pathMatch: 'full' ,\n    redirectTo: 'resume'\n  },\n  // Wildcard route for a 404 page\n  {\n    path: '**',\n    pathMatch: 'full',\n    redirectTo: 'resume'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(\n    routes,\n    {\n      useHash: true\n    }\n  )],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Release } from '../changelog/release';\nimport { Resume } from './resume';\nimport { Work } from './work';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.scss']\n})\nexport class ResumeComponent {\n  /**\n   * The resume.\n   */\n  public resume?: Resume;\n\n  /**\n   * The release.\n   */\n  public release?: Release;\n\n  /**\n   * Filter jobs withing 10 years.\n   */\n  public isWorkFiltered = false;\n\n  /**\n   * Filtered work.\n   */\n  public filteredWork: Work[] = [];\n\n  /**\n   * Holds the date to filter.\n   */\n  private dateFilter: string;\n\n  /**\n   * Initialize the component.\n   */\n  public constructor(httpClient: HttpClient) {\n    // Calculate 7 years ago.\n    const now = new Date();\n    now.setFullYear(now.getFullYear() - 7);\n    const month: string = `${now.getMonth()}`.padStart(2, '0');\n    const day: string = `${now.getDate()}`.padStart(2, '0');\n    this.dateFilter = `${now.getFullYear()}-${month}-${day}`;\n\n    // Get the resume.\n    httpClient.get<Resume>('/assets/resume.json')\n      .subscribe(\n        (resume: Resume) => {\n          // Get the resume\n          this.resume = resume;\n\n          // Update filter.\n          this.filterWork();\n        }\n      );\n\n      // Get the resume.\n      httpClient.get<Release>('/assets/release.json')\n        .subscribe(\n          (release: Release) => {\n            // Get the resume\n            this.release = release;\n          }\n        );\n  }\n\n  /**\n   * Filter the work.\n   */\n  public filterWork(): void {\n    // Update the filter.\n    this.isWorkFiltered = this.isWorkFiltered === false;\n\n    // Remove filter.\n    if (this.isWorkFiltered === false) {\n      this.filteredWork = this.resume?.work || [];\n      return;\n    }\n\n    // Filter the work.\n    if(this.resume && this.resume.work) {\n      this.filteredWork = this.resume.work\n      .filter((value: Work) => value.endDate > this.dateFilter);\n    }\n  }\n}","import { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ChangelogComponent } from './changelog/changelog.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ResumeComponent } from './resume/resume.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ResumeComponent,\n    ChangelogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const environment = {\n  production: true\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}